<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Salamandra on Salamandra App</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Salamandra on Salamandra App</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/home/</guid>
      <description>Welcome to Salamandra App Salamandra is an android App to organize and structure your workouts.
We are still in very early stages of development and the website is a work in progress.
Design Decisions Our Philosophy About The Code </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/rest_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/rest_api/</guid>
      <description>Resources Users GET /users/{user_id} (Authenticated) Return user with corresponding id
Path Parameters user_id UUID format Response application/json 200 OK User GET /users?username= (Authenticated) Return list of condensed user information given search term
Query Parameters username username of the user to search for Response application/json 200 OK List[UserInfo] POST /users (Authenticated) Create a new user in the system using the information provided. Note: The user must have been previously registered in Cognito</description>
    </item>
    <item>
      <title>About The Code</title>
      <link>http://localhost:1313/code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/code/</guid>
      <description>We want to include a less technical description of how the project is structured for people that are interested, but are less familiar with code. It will also help us work on making the project more understandable and improve our ability to explain it to others.
The app you are using is written in Kotlin, and the backend that supports it is in Rust. We had some previous experience with Android development, but are completely new to Rust.</description>
    </item>
    <item>
      <title>About Us</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>We are Jaime and Alberto, computer science students from Spain.
We just want to use the development of the app to learn and build a comprehensive project</description>
    </item>
    <item>
      <title>Android App</title>
      <link>http://localhost:1313/android_app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/android_app/</guid>
      <description>work in progress&amp;hellip;</description>
    </item>
    <item>
      <title>Backend Server</title>
      <link>http://localhost:1313/backend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/backend/</guid>
      <description> API Docs </description>
    </item>
    <item>
      <title>Design Decision</title>
      <link>http://localhost:1313/design_decisions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/design_decisions/</guid>
      <description>Why we don&amp;rsquo;t use identity providers Identity providers (eg. login with Google, Facebook&amp;hellip;) often lack open-source practices, making it difficult to trust their security, but mostly privacy measures. We&amp;rsquo;re not comfortable relying solely on size and reputation of a company when it comes to sensitive user data. Also, using identity providers centralizes logins, ending up with all you accounts under you Google/Apple/Facebook/Amazon.
Secure Password Management We use and recommend KeePassDX for Android and KeePassXC for Desktop.</description>
    </item>
    <item>
      <title>Features</title>
      <link>http://localhost:1313/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/features/</guid>
      <description>Work in progress</description>
    </item>
    <item>
      <title>Our Philosophy</title>
      <link>http://localhost:1313/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/philosophy/</guid>
      <description>Free and Open source Other people explain this way better than we ever could, you can read about it here
GNU Philosophy Free Software You can find open source alternatives to your favorito apps and tools here
We try to use as many open source technologies as we can, but have made some compromises out of necessity, we&amp;rsquo;re still learning the ropes with lesser-known open-source options. Our goal is to fully embrace open technologies as our expertise grows.</description>
    </item>
  </channel>
</rss>
